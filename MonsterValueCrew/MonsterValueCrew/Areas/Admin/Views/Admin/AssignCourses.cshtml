
@model MonsterValueCrew.Areas.Admin.ViewModels.UserCourseAssignmentViewModel
@{
    ViewBag.Title = "Assignment";
}
<h2>Assign Courses</h2>
@using (Html.BeginForm("Assignment", "Admin"))
{
    <div>
        <div>
            @*Listing Users*@
            @for (int i = 0; i < Model.Users.Count; i++)
                {
                <div>
                    @Html.HiddenFor(x => Model.Users[i].Id)
                </div>
                <div>
                    @Html.EditorFor(u => Model.Users[i].FirstName)
                    @Html.DisplayFor(x => Model.Users[i].UserName)
                    @Html.HiddenFor(x => Model.Users[i].UserName)
                </div>
                <div>
                    @Html.LabelFor(u => Model.IsMandatory)
                    @Html.EditorFor(u => Model.IsMandatory)
                </div>
                <div>
                    @Html.LabelFor(u => Model.DueDate)
                    @Html.EditorFor(u => Model.DueDate)
                </div>
            }
        </div>
        @*Listing Corses*@
        <div>
            @for (int i = 0; i < Model.Courses.Count; i++)
                {
                <div>
                    @Html.HiddenFor(x => Model.Courses[i].Id)
                </div>
                <div>
                    @Html.EditorFor(u => Model.Courses[i].IsChecked)
                    @Html.DisplayFor(x => Model.Courses[i].Name)
                    @Html.HiddenFor(x => Model.Courses[i].Name)
                </div>
            }
        </div>
        <div class="">
            <input type="submit" class="btn waves-effect" value="Assign Course To User">
        </div>
    </div>

}